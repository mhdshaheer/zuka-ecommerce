<%-include('../partials/user/header')%>

  <style>
    .categories-text {
      font-size: 16px;
      font-weight: bold;
      text-transform: uppercase;
      color: rgb(122, 121, 121);

      font-family: Arial, sans-serif;
    }

    /* .categories-text:hover {
      color: black;
    } */

    .form-container {
      background-color: #ffffff;
      padding: 30px;
      border-radius: 10px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      max-width: 600px;
      margin: auto;
    }

    .form-label {
      font-weight: 500;
      color: #495057;
    }

    .form-control {
      border-radius: 8px;
      border: 1px solid #ced4da;
    }

    .form-control:focus {
      box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
      border-color: #80bdff;
    }
  </style>
  <!-- Shop Section Begin -->
  <section class="shop spad">
    <div class="container">
      <div class="breadcrumb__text">
        <div class="breadcrumb__links">
          <a href="/">Home</a>
          <span>Address</span>
        </div>
      </div>
      <br>
      <div class="row">
        <div class="col-lg-3">
          <div class="shop__sidebar">
            <div class="shop__sidebar__accordion">
              <div class="accordion" id="accordionExample">
                <div class="card categories-text active">
                  <a href="/profile" class="text-secondary text-decoration-none hover:text-danger">Personal Info</a>
                </div>
              </div>
              <hr>
              <div class="accordion" id="accordionExample">
                <div class="card categories-text">
                  <a href="/address" class="text-dark">Address</a>
                </div>
              </div>
              <hr>
              <div class="accordion" id="accordionExample">
                <div class="card categories-text">
                  <a href="/orders" class="text-secondary text-decoration-none hover:text-danger">Orders</a>
                </div>
              </div>
              <hr>
              <div class="accordion" id="accordionExample">
                <div class="card categories-text">
                  <a href="/wallet" class="text-secondary text-decoration-none hover:text-danger">Wallet</a>
                </div>
              </div>
              <hr>
              
            </div>
          </div>
        </div>
        <div class="col-lg-9">

          <div class="row">
            <h2><b>Add Address</b></h2>
          </div>
          <hr>
          <div class="row">
            <div class="col-lg-6">
              <div class="checkout__input">
                <p>Name<span>*</span></p>
                <input type="text" class="text-dark" id="name">
                <div id="nameError"></div>
              </div>
            </div>

            <div class="col-lg-6">
              <div class="checkout__input">
                <p>Phone<span>*</span></p>
                <input type="number" value="" class="text-dark" id="phone">
                <div id="phoneError"></div>
              </div>
            </div>
            <div class="col-lg-6">
              <div class="checkout__input">
                <p>Alternative Phone</p>
                <input type="number" value="" class="text-dark" id="altPhone">
              </div>
            </div>
            <div class="col-lg-6 mb-2">
              <div class="checkout__input">
                <p>Address Type<span>*</span></p>
                <select class="form-control text-dark" required id="addressType">
                  <option value="" disabled selected>Select Address Type</option>
                  <option value="Home">Home</option>
                  <option value="Work">Work</option>
                  <option value="Other">Other</option>
                </select>
                <div id="addressTypeError"></div>
              </div>
            </div>
          </div>
          <div class="checkout__input">
            <p>Address<span>*</span></p>
            <input type="text" placeholder="Street Address" class="checkout__input__add text-dark" id="address">
            <div id="addressError"></div>
          </div>
          <div class="row">
            <div class="col-lg-3">
              <div class="checkout__input">
                <p>Country<span>*</span></p>
                <input type="text" class="text-dark" id="country">
                <div id="countryError"></div>
              </div>
            </div>
            <div class="col-lg-3">
              <div class="checkout__input">
                <p>State<span>*</span></p>
                <input type="text" class="text-dark" id="state">
                <div id="stateError"></div>
              </div>
            </div>
            <div class="col-lg-3">
              <div class="checkout__input">
                <p>City/Town<span>*</span></p>
                <input type="text" class="text-dark" id="city">
                <div id="cityError"></div>
              </div>
            </div>
            <div class="col-lg-3">
              <div class="checkout__input">
                <p>Pincode/ZIP<span>*</span></p>
                <input type="number" class="text-dark" id="pincode">
                <div id="pincodeError"></div>
              </div>
            </div>
          </div>
          <div>

            <button class="btn btn-dark py-3 px-5 mb-5 " id="addBtn">Add</button>
          </div>
          <div class="row">
            <h2><b>Saved Addresses</b></h2>
            <%if(addressDb){%>

              <%addressDb.address.map((item,index)=>{%>
                <div class="card shadow-sm col-4 col-md-4 col-12 m-2">
                  <div class="card-body">
                    <h5 class="card-title"><strong>
                        <%=item.addressType%> Address
                      </strong> </h5>
                    <p class="card-text">
                      <strong>Name:</strong>
                      <%=item.name%><br>
                        <strong>Address:</strong>
                        <%=item.address%>,<%=item.city%>,<%=item.state%>,<%=item.country%><br>
                                <strong>ZIP Code:</strong>
                                <%=item.pincode%><br>
                                  <strong>Phone:</strong>
                                  <%=item.phone%>,<br>
                                    <%=item.altPhone%><br>
                    </p>
                    <div class="col">
                      <a href="/editAddress?addressId=<%=item._id%>&index=<%=index%>"><button
                          class="btn btn-secondary">Edit</button></a>
                      <button class="btn btn-danger" id="deleteBtn"
                        onclick="deleteAddress('<%=index%>','<%=item._id%>')">Delete</button>
                    </div>
                  </div>
                </div>
                <%})%>
                  <%}else{%>
                    <div class="card shadow-sm col-4 m-2">
                      <div class="card-body">
                        <h5 class="card-title">No address Found</h5>
                      </div>
                    </div>
                    <%}%>


          </div>

          <!-- Footer Section End -->

          <script>
            const addBtn = document.getElementById('addBtn');
            const name = document.getElementById('name');
            // const email = document.getElementById('email');
            const phone = document.getElementById('phone');
            const altPhone = document.getElementById('altPhone');
            const addressType = document.getElementById('addressType');
            const address = document.getElementById('address');
            const country = document.getElementById('country');
            const state = document.getElementById('state');
            const city = document.getElementById('city');
            const pincode = document.getElementById('pincode');

            addBtn.addEventListener('click', (e) => {
              e.preventDefault();

              //=============================
              //add address
              function validateAddressForm() {
                const nameError = document.getElementById('nameError');
                const phoneError = document.getElementById('phoneError');
                const addressTypeError = document.getElementById('addressTypeError');
                const addressError = document.getElementById('addressError');
                const cityError = document.getElementById('cityError');
                const pincodeError = document.getElementById('pincodeError');
                const countryError = document.getElementById('countryError');
                const stateError = document.getElementById('stateError');

                const nameRegex = /^[a-zA-Z\s]{1,50}$/;
                const phoneRegex = /^[0-9]{10}$/;
                const addressRegex = /^[a-zA-Z0-9\s,.-]{1,255}$/;
                const cityRegex = /^[a-zA-Z\s]+$/;
                const pincodeRegex = /^[0-9]{6}$/;


                if (!nameRegex.test(name.value.trim())) {
                  nameError.style.color = "red";
                  nameError.innerHTML = "Invalid name. Please enter only alphabets";
                  name.focus();
                  return false;
                } else {
                  nameError.innerHTML = "";

                }

                if (!phoneRegex.test(phone.value.trim())) {
                  phoneError.style.color = "red";
                  phoneError.innerHTML = "Invalid phone number. Please enter a 10-digit number.";
                  phone.focus();
                  return false;
                }else{
                  phoneError.innerHTML = "";
                }

                if (addressType.value.trim() === "") {
                  addressTypeError.style.color = "red";
                  addressTypeError.innerHTML = "Please select an address type.";
                  addressType.focus();
                  return false;
                }else{
                  addressTypeError.innerHTML = "";
                }

                if (!addressRegex.test(address.value.trim())) {
                  addressError.style.color = "red";
                  addressError.innerHTML = "Invalid address. Please check for special characters.";
                  address.focus();
                  return false;
                }else{
                  addressError.innerHTML = "";
                }

                if (country.value.trim() === "") {
                  countryError.style.color = "red";
                  countryError.innerHTML = "Please select a country.";
                  country.focus();
                  return false;
                }else{
                  countryError.innerHTML = "";
                }

                if (state.value.trim() === "") {
                  stateError.style.color = "red";
                  stateError.innerHTML = "Please select a state.";
                  state.focus();
                  return false;
                }else{
                  stateError.innerHTML = "";
                }

                if (!cityRegex.test(city.value.trim())) {
                  cityError.style.color = "red";
                  cityError.innerHTML = "Invalid city. Please enter only alphabets.";
                  city.focus();
                  return false;
                }else{
                  cityError.innerHTML = "";
                }

                if (!pincodeRegex.test(pincode.value.trim())) {
                  pincodeError.style.color = "red";
                  pincodeError.innerHTML = "Invalid pincode. Please enter a 6-digit number.";
                  pincode.focus();
                  return false;
                }else{
                  pincodeError.innerHTML = "";
                }
                return true;
              }
              //=============================

              console.log(addressType.value);
              if (validateAddressForm()) {
                console.log("inside validate")

                axios.post('/addAddress', {
                  name: name.value,
                  // email:email.value,
                  phone: phone.value,
                  altPhone: altPhone.value,
                  addressType: addressType.value,
                  address: address.value,
                  country: country.value,
                  state: state.value,
                  city: city.value,
                  pincode: pincode.value
                }).then(res => {
                  if (res.status == 200) {
                    Swal.fire({
                      title: 'Success!',
                      text: 'Address added successfully!',
                      icon: 'success',
                      confirmButtonText: 'Okay'
                    }).then(() => {
                      window.location.reload()
                    })
                  }
                })
              }
            })

          </script>
          <script>
            function deleteAddress(index,addressId) {
              console.log(index,addressId)
              Swal.fire({
                title: 'Are you sure!',
                text: 'Do you want to delete address!',
                icon: 'warning',
                confirmButtonText: 'Okay',
                showCancelButton: true,
                cancelButtonText: 'Cancel'
              }).then((result) => {
                if (result.isConfirmed) {

                  axios.delete('/deleteAddress', {
                    params: {
                      index: index,
                      addressId
                    }
                  }).then(res => {
                    if (res.status == 200) {
                      Swal.fire({
                        title: 'Success!',
                        text: 'Address removed successfully!',
                        icon: 'success',
                        confirmButtonText: 'Okay'
                      }).then(() => {
                        window.location.reload()
                      })
                    }
                  })
                }
              })

            }
          </script>


          <!-- Js Plugins -->
          <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
          <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

          <script src="js/jquery-3.3.1.min.js"></script>
          <script src="js/bootstrap.min.js"></script>
          <script src="js/jquery.nice-select.min.js"></script>
          <script src="js/jquery.nicescroll.min.js"></script>
          <script src="js/jquery.magnific-popup.min.js"></script>
          <script src="js/jquery.countdown.min.js"></script>
          <script src="js/jquery.slicknav.js"></script>
          <script src="js/mixitup.min.js"></script>
          <script src="js/owl.carousel.min.js"></script>
          <script src="js/main.js"></script>
          </body>

          </html>
          